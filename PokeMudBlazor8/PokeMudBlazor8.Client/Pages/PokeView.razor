@page "/PokeView"
@using SharedModels
@using MudBlazor
@rendermode InteractiveAuto

@* @Attribute [Autorize] *@

@inject PokeMudBlazor8.Client.Services.PokemonApiService PokemonApiService
<MudDialogProvider/>
<MudSnackbarProvider/>

<h3>Aqui hay algunos Pokemones</h3>

@if (pokemons == null)
{
    <p>Cargando...</p>
}
else if (pokemons.Count == 0)
{
    <p>No se pudieron obtener Pok√©mon.</p>
}
else
{
    <MudGrid>
        @foreach (var pokemon in pokemons)
        {
            <MudItem xs="12" sm="6" md="4" lg="3">
                <MudPaper Class="p-2 m-2" Elevation="4">
                    <strong>@pokemon.Name</strong>
                    <br/>
                    <img src="@pokemon.Sprites.FrontDefault" alt="@pokemon.Name" />
                    <br/>
                    <div Class="d-flex flex-wrap gap-2 mt-2">
                        @foreach (var type in pokemon.Types)
                        {
                            <MudChip T="String" Color="Color.Primary" Variant="Variant.Filled" Class="text-white">
                                @type.Type.Name
                            </MudChip>
                        }
                    </div>
                </MudPaper>
            </MudItem>
        }
    </MudGrid>
}

@code {
    private List<Pokemon> pokemons;

    protected override async Task OnInitializedAsync()
    {
        pokemons = await PokemonApiService.GetPokemonsAsync(12);
    }
}